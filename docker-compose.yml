version: '3.8'

services:
  postgres:
    deploy:
      resources:
        limits:
          cpus: '1'
          memory: 1gb
    image: postgres
    container_name: postgres
    environment:
      POSTGRES_HOST: ${DB_HOST}
      POSTGRES_USER: ${DB_USER}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
      POSTGRES_DB: ${DB_NAME}
    ports:
      - "${DB_PORT}:5432"
    volumes:
      - posturex_pgdata:/var/lib/postgresql/data
    restart: always
    env_file:
      - .env

  minio:
    deploy:
      resources:
        limits:
          cpus: '1'
          memory: 1gb
    image: minio/minio
    container_name: minio
    environment:
      MINIO_ROOT_USER: ${MINIO_ACCESS_KEY}
      MINIO_ROOT_PASSWORD: ${MINIO_SECRET_KEY}
    ports:
      - "${MINIO_PORT}:9000"
      - "${MINIO_CONSOLE_PORT}:9001"
    volumes:
      - minio_data:/data
    command: server /data --console-address ":${MINIO_CONSOLE_PORT}"
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:${MINIO_PORT}/minio/health/live"]
      interval: 30s
      timeout: 20s
      retries: 3
    restart: no

  mc:
    container_name: mc
    image: minio/mc
    env_file:
      - .env
    restart: on-failure
    tty: true
    entrypoint: >
      /bin/sh -c "
      mc alias set local http://${MINIO_HOST}:${MINIO_PORT} ${MINIO_ACCESS_KEY} ${MINIO_SECRET_KEY};
      mc mb local/videos --ignore-existing;
      mc admin config set local notify_webhook:1 endpoint="http://flask-app:${FLASK_PORT}/api/minio/webhook";
      mc admin service restart local;
      sleep 5;
      mc event add local/videos arn:minio:sqs::1:webhook --event put --ignore-existing;"
    depends_on:
      - minio
      - flask-app

  flask-app:
    deploy:
      resources:
        limits:
          cpus: '1'
          memory: 1gb
    build:
      context: .
    container_name: backend
    depends_on:
      - postgres
      - minio
    ports:
      - "${FLASK_PORT}:5000"
    volumes:
      - .:/app
    restart: always
    env_file:
      - .env

volumes:
  posturex_pgdata:
  minio_data:
